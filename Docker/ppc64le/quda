mkdir quda
cd quda

cat > quda-Dockerfile <<- 'EOF'
FROM ppc64le/centos-cuda-devel:8.0  
MAINTAINER Junli Zhang <junlizh@cn.ibm.com>

RUN \
  yum -y update && \
  mkdir -p /var/run/sshd && \
  yum -y install openssh-server openssh-clients passwd \
    net-tools iproute hostname man which diffutils patch \
    make autoconf automake libtool cmake cmake3 \
	gcc gcc-gfortran gcc-c++ numactl-devel numactl \
	unzip openmpi-devel openblas-devel lapack-devel && \
  ln -s /usr/include/openmpi-ppc64le /usr/lib64/openmpi/include && \
  echo 'export PATH=/usr/lib64/openmpi/bin:$PATH' > /etc/profile.d/ompi.sh && \
  echo 'export LD_LIBRARY_PATH=/usr/lib64/openmpi/lib:$LD_LIBRARY_PATH' >> /etc/profile.d/ompi.sh && \
  ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N '' && \
  sed -i -e 's|#UseDNS yes|UseDNS no|g' /etc/ssh/sshd_config && \
  echo "root:p@ssw0rd" | chpasswd && \
  rm -rf /var/cache/yum/* 

ENV PATH /usr/lib64/openmpi/bin:$PATH
ENV LD_LIBRARY_PATH /usr/lib64/openmpi/lib:$LD_LIBRARY_PATH

RUN \
  wget -c ftp://172.16.15.29/hpc/quda/quda.tar.gz -O - | tar -xzf - && \
  cd quda && \
  mkdir build && \
  cd build && \
  sed -i.ori 's:set(CPU_ARCH x86_64):set(CPU_ARCH ppc64le):g' ../CMakeLists.txt && \
  cmake3 .. \
  -DCMAKE_CXX_COMPILER=/usr/bin/g++ \
  -DCMAKE_C_COMPILER=/usr/bin/gcc \
  -DMPI_CXX_COMPILER=/usr/lib64/openmpi/bin/mpicxx \
  -DMPI_C_COMPILER=/usr/lib64/openmpi/bin/mpicc \
  -DCUDA_HOST_COMPILER=/usr/bin/g++ \
  -DQUDA_GPU_ARCH=sm_60 \
  -DQUDA_MPI=ON \
  -DCUDA_SDK_ROOT_DIR=/usr/local/cuda \
  -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda \
  -DQUDA_NUMA_NVML=on \
  -DNVML_LIBRARY=/usr/local/cuda-8.0/targets/ppc64le-linux/lib/stubs/libnvidia-ml.so \
  -DNVML_INCLUDE_DIR=/usr/local/cuda-8.0/targets/ppc64le-linux/include \
  -DCUDA_VERBOSE_BUILD=on \
  -DCMAKE_VERBOSE_MAKEFILE=on \
  -DCMAKE_INSTALL_PREFIX=/usr/local/quda && \
  make -j24 && \
  make install

EXPOSE 22 

CMD ["/usr/sbin/sshd", "-D"]
EOF

docker build -t ppc64le/quda -f quda-Dockerfile  .

#https://github.com/lattice/quda/wiki/QUDA-Environment-Variables

## systemctl stop openibd && modprobe -r mlx5_ib
## Test1:
#4GPUs
mkdir -p quda-tune
nvidia-docker run --privileged -v $PWD:$PWD --rm -ti -w /quda/build \
-e QUDA_ENABLE_P2P=1 \
-e QUDA_ENABLE_TUNING=1 \
-e  QUDA_ENABLE_NUMA=1 \
-e QUDA_RESOURCE_PATH=$PWD/quda-tune \
-e QUDA_PROFILE_OUTPUT_BASE=profile \
ppc64le/quda \
mpirun --allow-run-as-root \
  --mca btl vader,self,tcp \
  --mca orte_base_help_aggregate 0 \
  --map-by slot:PE=4 \
  -report-bindings \
  -np 4 \
  ./tests/staggered_dslash_test \
   --prec double --recon 9 --xgridsize 1 --zgridsize 2 --ygridsize 2 --xdim 96 --ydim 48 --zdim 48 --tdim 16 --nsrc 18 --niter 2000 \
  2>&1 | tee log-4gpus-staggered_dslash_test

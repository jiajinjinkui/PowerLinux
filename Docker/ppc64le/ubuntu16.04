mkdir ubuntu
cd ubuntu

apt-get install -y debootstrap

debootstrap --variant=minbase --components=main,universe --include=inetutils-ping,iproute2 xenial ppc64el ftp://172.16.15.29/os/ubuntu/ubuntu-ports

cat > ppc64el/etc/apt/sources.list <<- EOF
#
deb ftp://172.16.15.29/os/ubuntu/ubuntu-ports xenial           main multiverse restricted universe
deb ftp://172.16.15.29/os/ubuntu/ubuntu-ports xenial-updates   main multiverse restricted universe
deb ftp://172.16.15.29/os/ubuntu/ubuntu-ports xenial-security  main multiverse restricted universe
deb ftp://172.16.15.29/os/ubuntu/ubuntu-ports xenial-proposed  main multiverse restricted universe
deb ftp://172.16.15.29/os/ubuntu/ubuntu-ports xenial-backports main multiverse restricted universe
EOF
echo '#' > ppc64el/etc/resolv.conf
chroot ppc64el/ bash -c "apt-get dist-upgrade -y && rm -rf /var/lib/apt/lists/* /var/cache/apt/*"

tar --numeric-owner --create --auto-compress --file rootfs.tar.xz --directory ppc64el --transform='s,^./,,' .

cat > ubuntu-Dockerfile << 'EOF'
FROM scratch
MAINTAINER JunLi Zhang<junlizh@cn.ibm.com>
ADD rootfs.tar.xz /

RUN set -xe \
  \
  && echo '#!/bin/sh' > /usr/sbin/policy-rc.d \
  && echo 'exit 101' >> /usr/sbin/policy-rc.d \
  && chmod +x /usr/sbin/policy-rc.d \
  \
  && dpkg-divert --local --rename --add /sbin/initctl \
  && cp -a /usr/sbin/policy-rc.d /sbin/initctl \
  && sed -i 's/^exit.*/exit 0/' /sbin/initctl \
  \
  && echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \
  \
  && echo 'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };' > /etc/apt/apt.conf.d/docker-clean \
  && echo 'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };' >> /etc/apt/apt.conf.d/docker-clean \
  && echo 'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";' >> /etc/apt/apt.conf.d/docker-clean \
  \
  && echo 'Acquire::Languages "none";' > /etc/apt/apt.conf.d/docker-no-languages \
  \
  && echo 'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";' > /etc/apt/apt.conf.d/docker-gzip-indexes

CMD ["/bin/bash"]
EOF

docker build -t ppc64le/ubuntu:16.04 -f ubuntu-Dockerfile .
